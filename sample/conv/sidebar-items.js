initSidebarItems({"mod":[["f32",""],["f64",""],["i16",""],["i24",""],["i32",""],["i48",""],["i64",""],["i8",""],["u16",""],["u24",""],["u32",""],["u48",""],["u64",""],["u8",""]],"trait":[["Duplex","Sample types which may be converted to and from some type `S`."],["DuplexFrameSlice",""],["DuplexFrameSliceMut",""],["DuplexSampleSlice",""],["DuplexSampleSliceMut",""],["DuplexSlice",""],["DuplexSliceMut",""],["FromFrameSlice","For converting from a slice of `Frame`s to a slice of `Sample`s."],["FromFrameSliceMut","For converting from a slice of `Frame`s to a slice of `Sample`s."],["FromSample","Similar to the std `From` trait, but specifically for converting between sample types."],["FromSampleSlice","For converting from a slice of `Sample`s to a slice of `Frame`s."],["FromSampleSliceMut","For converting from a mutable slice of `Sample`s to a mutable slice of `Frame`s."],["ToFrameSlice","For converting from a slice of `Sample`s to a slice of `Frame`s."],["ToFrameSliceMut","For converting from a mutable slice of `Sample`s to a mutable slice of `Frame`s."],["ToSample","Similar to the std `Into` trait, but specifically for converting between sample types."],["ToSampleSlice","For converting from a slice of `Frame`s to a slice of `Sample`s."],["ToSampleSliceMut","For converting from a mutable slice of `Frame`s to a mutable slice of `Sample`s."]]});